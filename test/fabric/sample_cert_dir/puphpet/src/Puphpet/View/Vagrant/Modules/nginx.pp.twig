class { 'nginx': }

{% for host in nginx.vhosts %}
{% if host.index_files %}
{% set index_file = host.index_files[host.index_files|length - 1] %}
{% else %}
{% set index_file = 'test.php' %}
{% endif %}

nginx::resource::vhost { '{{- host.servername -}}':
  ensure       => present,
  server_name  => [
    '{{ host.servername }}'{% if host.serveraliases %},
{{ format.explode_and_quote(host.serveraliases) }}
{% endif %}
  ],
  listen_port  => {{ host.port }},
  index_files  => [
{{ format.explode_and_quote(host.index_files) }}
  ],
  www_root     => '{{ host.docroot }}',
  try_files    => ['$uri', '$uri/', '/{{ index_file }}?$args'],
}

{# "fastcgi_param" with spaces hack: The nginx vhost template
resolves the cfg_append configuration as normal key-value hash.
Therefore all values with the same keys are lost.
The workaround is to use the same key but string padding it with spaces.
It looks quite strange here but the resulting nginx vhost is syntactically still correct.
#}
$path_translated = 'PATH_TRANSLATED $document_root$fastcgi_path_info'
$script_filename = 'SCRIPT_FILENAME $document_root$fastcgi_script_name'

nginx::resource::location { '{{ host.servername }}-php':
  ensure              => 'present',
  vhost               => '{{ host.servername }}',
  location            => '~ \.php$',
  proxy               => undef,
  try_files           => ['$uri', '$uri/', '/{{ index_file }}?$args'],
  www_root            => '{{ host.docroot }}',
  location_cfg_append => {
    'fastcgi_split_path_info' => '^(.+\.php)(/.+)$',
    'fastcgi_param'           => 'PATH_INFO $fastcgi_path_info',
    'fastcgi_param '          => $path_translated,
    'fastcgi_param  '         => $script_filename,
{% for key,value in host.envvars %}
    'fastcgi_param{{ ("%-"~(loop.index0+3)~"s")|format(' ') }}'           => '{{ key }} {{ value }}',
{% endfor %}
    'fastcgi_pass'            => '{{ php.version == 'php53'? '127.0.0.1:9000' :'unix:/var/run/php5-fpm.sock' }}',
    'fastcgi_index'           => 'index.php',
    'include'                 => 'fastcgi_params'
  },
  notify              => Class['nginx::service'],
}
{% endfor %}
